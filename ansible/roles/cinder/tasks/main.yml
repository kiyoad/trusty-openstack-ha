---
# Install Cinder

- name: Create Cinder DB
  mysql_db:
    login_host: "{{ openstack_database_ip }}"
    login_user: root
    login_password: "{{ database_root_password }}"
    name: cinder
    state: present
  when: require_db_settings

- name: Add user to DB
  mysql_user:
    login_port: "{{ mysql_port }}"
    login_user: root
    login_password: "{{ database_root_password }}"
    host: "{{ item }}"
    user: cinder
    password: "{{ cinder_db_password }}"
    priv: "cinder.*:ALL"
  with_items:
    - "localhost"
    - "%"
  when: require_db_settings

- name: Check Cinder user existence
  shell: |
    export LC_ALL=C
    export OS_PROJECT_DOMAIN_ID=default
    export OS_USER_DOMAIN_ID=default
    export OS_PROJECT_NAME=admin
    export OS_TENANT_NAME=admin
    export OS_USERNAME=admin
    export OS_PASSWORD={{ openstack_admin_password }}
    export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v3
    openstack user list | grep -q cinder
  register: is_cinder_exist
  ignore_errors: True
  changed_when: False
  when: require_db_settings

- name: Add Cinder user,role,service and endpoint
  shell: |
    export LC_ALL=C
    export OS_PROJECT_DOMAIN_ID=default
    export OS_USER_DOMAIN_ID=default
    export OS_PROJECT_NAME=admin
    export OS_TENANT_NAME=admin
    export OS_USERNAME=admin
    export OS_PASSWORD={{ openstack_admin_password }}
    export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v3
    openstack user create --project service --password {{ cinder_password }} cinder
    openstack role add --project service --user cinder admin
    openstack service create --name cinder   --description "OpenStack Block Storage"    volume
    openstack service create --name cinderv2 --description "OpenStack Block Storage V2" volumev2
    openstack endpoint create --publicurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --internalurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --adminurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --region RegionOne volume
    openstack endpoint create --publicurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --internalurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --adminurl http://{{ cinder_ip }}:8776/v2/%\(tenant_id\)s --region RegionOne volumev2
  when: require_db_settings and is_cinder_exist|failed
  changed_when: False

- name: Install Cinder packages
  apt: name="{{ item }}"
  with_items:
    - cinder-api
    - cinder-scheduler
    - python-cinderclient

- name: Set Cinder configuration
  shell: |
    cp /etc/cinder/cinder.conf /etc/cinder/cinder.conf.prev
    crudini --set /etc/cinder/cinder.conf DEFAULT debug {{ cinder_conf_debug }}
    crudini --set /etc/cinder/cinder.conf DEFAULT verbose {{ cinder_conf_verbose }}
    crudini --set /etc/cinder/cinder.conf DEFAULT rpc_response_timeout {{ cinder_rpc_response_timeout }}
    crudini --set /etc/cinder/cinder.conf DEFAULT osapi_volume_listen_port {{ cinder_api_port }}
    crudini --set /etc/cinder/cinder.conf database connection mysql://cinder:{{ cinder_db_password }}@{{ openstack_database_ip }}/cinder
    crudini --set /etc/cinder/cinder.conf DEFAULT rpc_backend rabbit
    crudini --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_host {{ openstack_messaging_ip }}
    crudini --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_userid {{ messaging_user }}
    crudini --set /etc/cinder/cinder.conf oslo_messaging_rabbit rabbit_password {{ messaging_password }}
    crudini --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone
    crudini --set /etc/cinder/cinder.conf keystone_authtoken auth_uri http://{{ keystone_ip }}:5000
    crudini --set /etc/cinder/cinder.conf keystone_authtoken auth_url http://{{ keystone_ip }}:35357
    crudini --set /etc/cinder/cinder.conf keystone_authtoken auth_plugin password
    crudini --set /etc/cinder/cinder.conf keystone_authtoken project_domain_id default
    crudini --set /etc/cinder/cinder.conf keystone_authtoken user_domain_id default
    crudini --set /etc/cinder/cinder.conf keystone_authtoken project_name service
    crudini --set /etc/cinder/cinder.conf keystone_authtoken username cinder
    crudini --set /etc/cinder/cinder.conf keystone_authtoken password {{ cinder_password }}
    crudini --set /etc/cinder/cinder.conf DEFAULT my_ip {{ my_ip }}
    crudini --set /etc/cinder/cinder.conf oslo_concurrency lock_path /var/lock/cinder
  changed_when: False

- name: Check Cinder configuration modification
  shell: diff -u /etc/cinder/cinder.conf.prev /etc/cinder/cinder.conf
  register: equal
  ignore_errors: True
  changed_when: equal|failed
  notify:
    - Restart Cinder

- name: Check Cinder DB table existence
  shell: mysql -h {{ openstack_database_ip }} -uroot -p{{ mysql_root_password }} cinder -e "show tables;" | grep -q cinder
  register: is_table_exist
  ignore_errors: True
  changed_when: False
  when: require_db_settings

- name: Populate the Cinder database
  shell: cinder-manage db sync
  sudo_user: cinder
  when: require_db_settings and is_table_exist|failed

- name: Remove unused SQLite database
  file: path=/var/lib/cinder/cinder.sqlite state=absent
  ignore_errors: True
